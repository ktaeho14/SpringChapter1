Spring Annotation
-빈과 관련된 정보를 설정할 수 있다.

Spring에서 annotation을 사용 하기 위한 필요 설정

1.CommonAnnotationBeanPostProcessor클래스를 설정파일(xml파일) bean객체로 등록하여 anno를 적용
	<bean class="org.springframework.beans.factroy.annotation.CommonAnnotationBeanPostProcessor"/>

--거의 사용하지 않는 방식이다.


2.<context:annotation-config/>태그 이용
	@Autowired, @Required, @Resource 등의 anno을 자동 처리

3.<context:component-scan base-pakage=""/> 태그 이용
	@Component, @Controller, @Service, @Repository 등의 annotation을 자동처리

4.<mvc:annotation-driven/>
	@RequestMapping, @Valid 등 spring mvc component등을 자동 처리.
	
--4개의 stereotype annotation(component-scan)
@Component: stereotype annotation의 조상
@Controller: Spring MVC에서 Controller로 인식
@Service: 역할 부여 없이 스캔 대상이 됨, 주로 Bizness 클래스(biz)에 사용한다
@repository: 일반적으로 dao(모델)에 사용  

1.@Component
클래스에 선언하며 해당 클래스를 자동으로 bean 등록
bean의 이름은 클래스명이 사용(첫글자는 소문자)

2.@Autowired
spring 의존관계를 자동으로 설정할 때 사용 ,필드, 생성자, 메소드 3곳에 적용 가능.
해당 타입의 빈 객체가 없거나 2개 이상일 경우 예외 발생. @Qualifier를 사용하여 동일 타입 빈 중 특정 빈을 사용하도록 해결 가능
@Autowired
@Qualifier("test")
private Test test; //byType --> byName

3.@Qualifier
@Autowired가 타입 기반이기 때문에 동일한 타입의 빈이 존재할 시 특정 빈을 사용할 수 있도록 선언
@Autowired와 같이 사용, 메소드에서 두 개 이상의 파라미터를 사용 할 경우에는 파라미터 앞에 선언
 
 
 4.@Required
 필수 프로퍼티임을 명시. 프로퍼티 설정 메서드(setter)에 붙인다.
 필수 프로퍼티를 설정 하지 않을 경우 빈 생성시 예외를 발생
 
 5.@Repository
 dao에 사용. exception을 DataAccessException으로 변환
 
 6.@Service
 biz에 사용
 
 7.@Resource
 필요로하는 자원을 자동 연결
name 속성에 자동으로 연결된 빈 객체의 이름을 입력
@Resource(name="testDao") //byName -> byType


 
 
 